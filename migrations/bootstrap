#!/bin/sh
set -euo pipefail

function handler () {
    mig_version=$(cat /var/task/current_version.txt)
    echo "mig_version: $mig_version"
    echo "migrate info:"
    /var/task/sqlx migrate info --no-dotenv --source sql
    echo ""
    echo "migrate run:"
    /var/task/sqlx migrate run --no-dotenv --source sql --target-version $mig_version
}

while true
do
    # Request the next event from the Lambda runtime
    HEADERS="$(mktemp)"
    # Get an event. The HTTP request will block until one is received
    EVENT_DATA=$(curl -sS -LD "$HEADERS" -X GET "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")
    # Extract request ID by scraping response headers received above
    INVOCATION_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

    # Handler function
    RESPONSE=$(handler)

    # Send the response
    curl "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$INVOCATION_ID/response" -d "$RESPONSE"
done
